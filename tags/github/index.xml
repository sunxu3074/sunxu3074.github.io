<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Github on ban&amp;pick </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://sunxu.work/tags/github/</link>
    <language>en-us</language>
    <author>Xu Sun</author>
    <copyright>Copyright (c) 2015, Xu Sun; all rights reserved.</copyright>
    <updated>Tue, 05 Jul 2016 14:48:41 CST</updated>
    
    <item>
      <title>Github Starred Repository</title>
      <link>http://sunxu.work/cs/github_starred_repository/</link>
      <pubDate>Tue, 05 Jul 2016 14:48:41 CST</pubDate>
      <author>Xu Sun</author>
      <guid>http://sunxu.work/cs/github_starred_repository/</guid>
      <description>

&lt;p&gt;对以前star过的项目进行分类整理，大致结构如下。资源类里有很多宝贵的资料，有算法，教程，源码分析等等。时间紧，没有对一些库进行清楚的分类，建议直接搜索关键字，希望对你有所帮助。&lt;/p&gt;

&lt;p&gt;项目地址： &lt;a href=&#34;https://github.com/sunxu3074/StarredRepository&#34;&gt;https://github.com/sunxu3074/StarredRepository&lt;/a&gt; &amp;nbsp;&amp;nbsp;
欢迎star&amp;amp;fork&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;│------ Android
│          │----- View
│					│----- 图表
│					│----- TAB
│					│----- 下拉加载
│					│----- Loding
│					│----- ViewPager
│					│----- TimePicker
│					│----- 高斯模糊
│					│----- SwipeBack
│					│----- Dialog
│					│----- Spinner
│					│----- Adapter
│          │----- Google
│          │----- Facebook
│          │----- Square
│          │----- JakeWharton
│          │----- Yalantis
│          │----- Material Design
│          │----- 数据库
│          │----- Oauth
│          │----- 框架类
│          │----- 工具类
│          │----- 架构类
│          │----- 测试类
│          │----- 权限相关
│          │----- 资源类
│          │----- APP
│------ Python
│------ 前端
│------ 流媒体
│------ 杂七杂八
│
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;android:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Android&lt;/h2&gt;

&lt;h3 id=&#34;view篇:b165defa7204a9db93d2ab27f621cd65&#34;&gt;View篇&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Carbs0126/NumberPickerView&#34;&gt;NumberPickerView&lt;/a&gt; &amp;nbsp;&amp;nbsp; 选择日期 文字&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/romainguy/elegant-underline&#34;&gt;elegant-underline&lt;/a&gt; &amp;nbsp;&amp;nbsp;高逼格下划线&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/barteksc/AndroidPdfViewer&#34;&gt;AndroidPdfViewer&lt;/a&gt;&amp;nbsp;&amp;nbsp;渲染PDF阅读适用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SuperKung/DashboardView&#34;&gt;DashboardView&lt;/a&gt;&amp;nbsp;&amp;nbsp;自定义仪表盘&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/henrytao-me/smooth-app-bar-layout&#34;&gt;smooth-app-bar-layout&lt;/a&gt;&amp;nbsp;&amp;nbsp;Google Support Design AppBarLayout&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/w1123440793/VideoListDemo&#34;&gt;VideoListDemo&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个视频播放列表demo，视频播放使用的ijkplayer,正在播放视频拖动到不可见区域小窗口播放，可全屏切换&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Arisono/FunnelView&#34;&gt;FunnelView&lt;/a&gt; &amp;nbsp;&amp;nbsp; 销售漏斗图&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Jaouan/Revealator&#34;&gt;Revealator&lt;/a&gt;  &amp;nbsp;&amp;nbsp;An helper to circle reveal/unreveal a view easily&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dalong982242260/SlidingBallViewPager&#34;&gt;SlidingBallViewPager&lt;/a&gt; &amp;nbsp;&amp;nbsp;仿qq身边的人Viewpager实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JeasonWong/BezierLoadingView&#34;&gt;BezierLoadingView&lt;/a&gt;  &amp;nbsp;&amp;nbsp;炫酷的贝塞尔加载View&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qs-lll/ExpandingPager&#34;&gt;ExpandingPager&lt;/a&gt; &amp;nbsp;&amp;nbsp; a card peek/pop controller&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/binIoter/GuideView&#34;&gt;GuideView&lt;/a&gt;&amp;nbsp;&amp;nbsp; 为控件添加引导提示&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dinuscxj/CircleProgressBar&#34;&gt;CircleProgressBar&lt;/a&gt; &amp;nbsp;&amp;nbsp; 实心和线条两种风格的圆环进度条&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dreamlivemeng/HotImg&#34;&gt;HotImg&lt;/a&gt; &amp;nbsp;&amp;nbsp;图片不规则区域点击事件处理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/goo4it/MediaPlayer&#34;&gt;MediaPlayer&lt;/a&gt; &amp;nbsp;&amp;nbsp;高仿网易云音乐&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aritraroy/PinLockView&#34;&gt;PinLockView&lt;/a&gt;  &amp;nbsp;&amp;nbsp;锁屏控件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sfsheng0322/MarqueeView&#34;&gt;MarqueeView&lt;/a&gt; &amp;nbsp;&amp;nbsp;垂直翻页公告&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/north2014/A-MusicView&#34;&gt;A-MusicView&lt;/a&gt; &amp;nbsp;&amp;nbsp;音乐波形图 适用于音乐APP 作者有一系列的自定义VIEW&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cooltechworks/ScratchView&#34;&gt;ScratchView&lt;/a&gt; 即开式VIEW 用于开奖等APP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cpiz/BubbleView/&#34;&gt;BubbleView&lt;/a&gt; &amp;nbsp;&amp;nbsp;带箭头的Android气泡控件/容器类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yasic/QQBubbleView&#34;&gt;QQBubbleView&lt;/a&gt;&amp;nbsp;&amp;nbsp;利用三阶贝塞尔曲线模仿QQ空间直播时右下角的礼物冒泡特效&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/afollestad/easy-video-player&#34;&gt;easy-video-player&lt;/a&gt;&amp;nbsp;&amp;nbsp; VideoPlayer ，用可用音乐APP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/danielzeller/Depth-LIB-Android-&#34;&gt;Depth-LIB-Android-&lt;/a&gt;&amp;nbsp;&amp;nbsp;This library adds depth/thickness to views.Awesome!!!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xiongwei-git/AndroidVideoPlayer&#34;&gt;AndroidVideoPlayer&lt;/a&gt; &amp;nbsp;&amp;nbsp;支持MP4&amp;amp;3GP 横屏竖屏全屏转换&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/7heaven/CurtainSlidingMenu&#34;&gt;CurtainSlidingMenu&lt;/a&gt;&amp;nbsp;&amp;nbsp;SlidingMenu With Curtain Effect&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HelloVass/FaceTextLayout&#34;&gt;FaceTextLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;将“颜文字”进行萌萌哒排&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SpikeKing/TestAppBar&#34;&gt;TestAppBar&lt;/a&gt;&amp;nbsp;&amp;nbsp;AppBar 布局的使用方式&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/binglingziyu/OwlView&#34;&gt;OwlView&lt;/a&gt;&amp;nbsp;&amp;nbsp;模仿readme.io登陆页面的动画效果,类似B站的登陆页面&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DevLight-Mobile-Agency/ShadowLayout&#34;&gt;ShadowLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;This library allows you to create a shadow effect for your layout based on your child.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/w446108264/XhsWelcomeAnim&#34;&gt;XhsWelcomeAnim&lt;/a&gt; &amp;nbsp;&amp;nbsp;小红书引导页&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-cjj/JJSearchViewAnim&#34;&gt;JJSearchViewAnim&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个炫酷的SearchView搜索动画库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ryanhoo/Zhihu-Parallax-Animation&#34;&gt;Zhihu-Parallax-Animation&lt;/a&gt;&amp;nbsp;&amp;nbsp;知乎 Android 客户端启动页的视差动画效果实现&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Ramotion/folding-cell-android&#34;&gt;folding-cell-android&lt;/a&gt; &amp;nbsp;&amp;nbsp;炫酷的动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Telenav/NodeFlow&#34;&gt;NodeFlow&lt;/a&gt;&amp;nbsp;&amp;nbsp;NodeFlow is a library that makes visualizing hierarchical content easier.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xmuSistone/android-vertical-slide-view&#34;&gt;android-vertical-slide-view&lt;/a&gt;&amp;nbsp;&amp;nbsp;仿照淘宝和聚美优品，在商品详情页，向上拖动时，可以加载下一页&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alorma/TimelineView&#34;&gt;TimelineView&lt;/a&gt;&amp;nbsp;&amp;nbsp;时间线&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/daCapricorn/ArcMenu&#34;&gt;ArcMenu&lt;/a&gt;&amp;nbsp;&amp;nbsp;仿PATH的MENU&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangjiegulu/DraggableFlagView&#34;&gt;DraggableFlagView&lt;/a&gt;&amp;nbsp;&amp;nbsp;可拖拽的红点，（仿新版QQ，tab下面拖拽标记为已读的效果），拖拽一定的距离可以消失回调。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geftimov/android-pathview&#34;&gt;android-pathview-SVG&lt;/a&gt; &amp;nbsp;&amp;nbsp;Animate svg.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xujinyang/BiuEditText&#34;&gt;BiuEditText&lt;/a&gt;&amp;nbsp;&amp;nbsp;biu，biu，一个有趣的EditText&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nomanr/ZoomTextView&#34;&gt;ZoomTextView&lt;/a&gt;&amp;nbsp;&amp;nbsp;根据收拾放大TextView.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jd-alexander/LikeButton&#34;&gt;LikeButton&lt;/a&gt;&amp;nbsp;&amp;nbsp;仿Tweet点赞动画效果&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hanks-zyh/HTextView&#34;&gt;HTextView&lt;/a&gt;&amp;nbsp;&amp;nbsp;Animation effects to TextView&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/Highlight&#34;&gt;Highlight&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个用于app指向性功能高亮的库。引导使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/daimajia/AndroidViewAnimations&#34;&gt;AndroidViewAnimations&lt;/a&gt;&amp;nbsp;&amp;nbsp;Cute view animation collection.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SpecialCyCi/AndroidResideMenu&#34;&gt;AndroidResideMenu&lt;/a&gt;&amp;nbsp;&amp;nbsp;Look like Double SlidingMenu.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/daimajia/AndroidViewHover&#34;&gt;AndroidViewHover&lt;/a&gt;&amp;nbsp;&amp;nbsp;A hover view, to show menu, to show messages.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HoneyNeutrons/RecyclerViewUndoSwipe&#34;&gt;RecyclerViewUndoSwipe&lt;/a&gt;&amp;nbsp;&amp;nbsp; ItemTouch helper swipe and drag support for RecyclerView&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Geekince/WaterWaveView&#34;&gt;WaterWaveView&lt;/a&gt;&amp;nbsp;&amp;nbsp;模拟水波纹的效果，实现流量的动态显示。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gumingwei/electric_screen2D&#34;&gt;electric_screen2D&lt;/a&gt;&amp;nbsp;&amp;nbsp;electric screen in your phone,like magic wallpaper&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elevenetc/TextSurface&#34;&gt;TextSurface&lt;/a&gt;&amp;nbsp;&amp;nbsp;A little animation framework which could help you to show message in a nice looking way&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tyrantgit/ExplosionField&#34;&gt;ExplosionField&lt;/a&gt;&amp;nbsp;&amp;nbsp;explosive dust effect for views.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zcweng/ToggleButton&#34;&gt;ToggleButton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dmytrodanylyk/circular-progress-button&#34;&gt;circular-progress-button&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xiaopansky/SwitchButton&#34;&gt;SwitchButton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;图表:b165defa7204a9db93d2ab27f621cd65&#34;&gt;图表&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JeasonWong/AndroidChart&#34;&gt;AndroidChart&lt;/a&gt; &amp;nbsp;&amp;nbsp;Some chart.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;tab:b165defa7204a9db93d2ab27f621cd65&#34;&gt;TAB&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DevLight-Mobile-Agency/NavigationTabStrip&#34;&gt;NavigationTabStrip&lt;/a&gt; &amp;nbsp;&amp;nbsp;高大上的TAB&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/H07000223/FlycoTabLayout/&#34;&gt;FlycoTabLayout&lt;/a&gt; &amp;nbsp;&amp;nbsp;一个Android TabLayout库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/armcha/LuseenBottomNavigation&#34;&gt;LuseenBottomNavigation&lt;/a&gt; &amp;nbsp;&amp;nbsp;A cool Bottom Navigation.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sunxu3074/Dota2_Max_Tab&#34;&gt;Dota2_Max_Tab&lt;/a&gt;&amp;nbsp;&amp;nbsp;仿Dota2_Max的三角形联动&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nshmura/RecyclerTabLayout&#34;&gt;RecyclerTabLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;An efficient TabLayout library implemented with RecyclerView.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/astuetz/PagerSlidingTabStrip&#34;&gt;PagerSlidingTabStrip&lt;/a&gt;&amp;nbsp;&amp;nbsp;An interactive indicator to navigate between the different pages of a ViewPager&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Kaopiz/android-segmented-control&#34;&gt;android-segmented-control&lt;/a&gt;&amp;nbsp;&amp;nbsp;Based on RadioGroup and RadioButton widget.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;下拉加载:b165defa7204a9db93d2ab27f621cd65&#34;&gt;下拉加载&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/pull-to-make-soup&#34;&gt;pull-to-make-soup&lt;/a&gt; &amp;nbsp;&amp;nbsp;可用于烹饪类APP 下拉加载使用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dinuscxj/RecyclerRefreshLayout&#34;&gt;RecyclerRefreshLayout&lt;/a&gt; &amp;nbsp;&amp;nbsp;下拉刷新&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/desmond1121/Android-Ptr-Comparison&#34;&gt;Android-Ptr-Comparison&lt;/a&gt;&amp;nbsp;&amp;nbsp;安卓下拉刷新开源库对比&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bingoogolapple/BGARefreshLayout-Android&#34;&gt;BGARefreshLayout-Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;多种下拉刷新效果、上拉加载更多、可配置自定义头部广告位&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;loding:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Loding&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ybq/Android-SpinKit&#34;&gt;Android-SpinKit&lt;/a&gt; &amp;nbsp;&amp;nbsp;炫酷的加载，实现了&lt;a href=&#34;https://github.com/tobiasahlin/SpinKit&#34;&gt;SpinKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dinuscxj/LoadingDrawable&#34;&gt;LoadingDrawable&lt;/a&gt; &amp;nbsp;&amp;nbsp;炫酷的Loding动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Rogero0o/GifLoadingView&#34;&gt;GifLoadingView&lt;/a&gt;&amp;nbsp;&amp;nbsp;炫酷的Loding动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Huyamin150/-dampView-springingView&#34;&gt;-dampView-springingView&lt;/a&gt;&amp;nbsp;&amp;nbsp;带有阻尼效果（橡皮筋效果）跳动的Loading动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yellow5A5/BoilingLoadingView&#34;&gt;BoilingLoadingView&lt;/a&gt;&amp;nbsp;&amp;nbsp;锅煮萝卜的Loading动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/TomWithJerry/CoolAndroidAnim&#34;&gt;CoolAndroidAnim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yxping/AdhesiveLoadingView&#34;&gt;AdhesiveLoadingView&lt;/a&gt;&amp;nbsp;&amp;nbsp;具有粘性的滑动小球，跌落反弹形成loading的效果&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zzz40500/android-shapeLoadingView&#34;&gt;android-shapeLoadingView&lt;/a&gt;&amp;nbsp;&amp;nbsp;高仿新版58 加载动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jpardogo/GoogleProgressBar&#34;&gt;GoogleProgressBar&lt;/a&gt;Android library to display progress like google does in some of his services.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;viewpager:b165defa7204a9db93d2ab27f621cd65&#34;&gt;ViewPager&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ybq/ParallaxViewPager&#34;&gt;ParallaxViewPager&lt;/a&gt; &amp;nbsp;&amp;nbsp;ParallaxViewPager&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ongakuer/CircleIndicator&#34;&gt;CircleIndicator&lt;/a&gt;&amp;nbsp;&amp;nbsp;A lightweight viewpager indicator&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/MagicViewPager&#34;&gt;MagicViewPager&lt;/a&gt;&amp;nbsp;&amp;nbsp;单页显示3个Item的ViewPager切换，适用于Banner&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jfeinstein10/JazzyViewPager&#34;&gt;JazzyViewPager&lt;/a&gt; &amp;nbsp;&amp;nbsp;类似Google的nexus机子6.0系统的开机动画&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lightSky/InfiniteIndicator&#34;&gt;InfiniteIndicator&lt;/a&gt;&amp;nbsp;&amp;nbsp;This lib can be used for viewpager infinite loop with indicator easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;timepicker:b165defa7204a9db93d2ab27f621cd65&#34;&gt;TimePicker&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JZXiang/TimePickerDialog&#34;&gt;TimePickerDialog&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android时间选择器&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;swipeback:b165defa7204a9db93d2ab27f621cd65&#34;&gt;SwipeBack&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hanhailong/SwipeBackSample&#34;&gt;SwipeBackSample&lt;/a&gt;&amp;nbsp;&amp;nbsp;高仿微信手势滑动返回&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sockeqwe/SwipeBack&#34;&gt;SwipeBack&lt;/a&gt;&amp;nbsp;&amp;nbsp;高仿简书手势滑动返回&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/liuguangqiang/SwipeBack&#34;&gt;SwipeBack&lt;/a&gt;&amp;nbsp;&amp;nbsp;SwipeBack Lib,可定制手势.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HoneyNeutrons/RecyclerViewUndoSwipe&#34;&gt;RecyclerViewUndoSwipe&lt;/a&gt;&amp;nbsp;&amp;nbsp; ItemTouch helper swipe and drag support for RecyclerView&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/daimajia/AndroidSwipeLayout&#34;&gt;AndroidSwipeLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;The Most Powerful Swipe Layout!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baoyongzhang/android-PullRefreshLayout&#34;&gt;android-PullRefreshLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;This component like SwipeRefreshLayout, it is more beautiful than SwipeRefreshLayout.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ikew0ng/SwipeBackLayout&#34;&gt;SwipeBackLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;An Android library that help you to build app with swipe back gesture.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;高斯模糊:b165defa7204a9db93d2ab27f621cd65&#34;&gt;高斯模糊&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qiujuer/ImageBlurring&#34;&gt;ImageBlurring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kikoso/android-stackblur&#34;&gt;android-stackblur&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SmartDengg/RxBlur&#34;&gt;RxBlur&lt;/a&gt;&amp;nbsp;&amp;nbsp; 用RxJava处理和操作高斯模糊效果的简单用例。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tvbarthel/BlurDialogFragment&#34;&gt;BlurDialogFragment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;adapter:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Adapter&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CymChad/BaseRecyclerViewAdapterHelper&#34;&gt;BaseRecyclerViewAdapterHelper&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个强大并且灵活的RecyclerViewAdapter&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JoanZapata/base-adapter-helper&#34;&gt;base-adapter-helper&lt;/a&gt;&amp;nbsp;&amp;nbsp;Abstraction for the usual BaseAdapter &amp;ldquo;ViewHolder&amp;rdquo; pattern&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yqritc/RecyclerView-FlexibleDivider&#34;&gt;RecyclerView-FlexibleDivider&lt;/a&gt; &amp;nbsp;&amp;nbsp;RecyclerView分割线&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;spinner:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Spinner&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jaredrummler/Material-Spinner&#34;&gt;Material-Spinner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;dialog:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Dialog&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/afollestad/material-dialogs&#34;&gt;material-dialogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/drakeet/MaterialDialog&#34;&gt;MaterialDialog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;google:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Google&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/flexbox-layout&#34;&gt;flexbox-layout&lt;/a&gt;&amp;nbsp;&amp;nbsp; Flexbox for Android&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/agera&#34;&gt;agera&lt;/a&gt;&amp;nbsp;&amp;nbsp;Reactive Programming for Android&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/googlesamples/android-architecture&#34;&gt;android-architecture&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android Architecture Blueprints&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/material-design-icons&#34;&gt;material-design-icons&lt;/a&gt;&amp;nbsp;&amp;nbsp;Material Design icons by Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/j2objc&#34;&gt;j2objc&lt;/a&gt;&amp;nbsp;&amp;nbsp;A Java to iOS Objective-C translation tool and runtime.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;facebook:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Facebook&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/network-connection-class&#34;&gt;network-connection-class&lt;/a&gt;  &amp;nbsp;&amp;nbsp;监听当前网络状况及对当前网络进行质量分类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/infer&#34;&gt;infer&lt;/a&gt; &amp;nbsp;&amp;nbsp;Infer is a static analysis tool for Java, Objective-C and C, written in OCaml.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/stetho&#34;&gt;stetho&lt;/a&gt;&amp;nbsp;&amp;nbsp;Stetho is a debug bridge for Android applications.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/facebook/fresco&#34;&gt;fresco&lt;/a&gt;&amp;nbsp;&amp;nbsp;An Android library for managing images and the memory they use.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;square:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Square&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/haha&#34;&gt;haha&lt;/a&gt;&amp;nbsp;&amp;nbsp;Java library to automate the analysis of Android heap dumps.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/android-times-square&#34;&gt;android-times-square&lt;/a&gt;&amp;nbsp;&amp;nbsp;Standalone Android widget for picking a single date from a calendar view.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/moshi&#34;&gt;moshi&lt;/a&gt;&amp;nbsp;&amp;nbsp;A modern JSON library for Android and Java.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/retrofit&#34;&gt;retrofit&lt;/a&gt;&amp;nbsp;&amp;nbsp;Type-safe HTTP client for Android and Java.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/okhttp&#34;&gt;okhttp&lt;/a&gt;&amp;nbsp;&amp;nbsp;An HTTP+HTTP/2 client for Android and Java applications.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/picasso&#34;&gt;picasso&lt;/a&gt;&amp;nbsp;&amp;nbsp;A powerful image downloading and caching library for Android&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;jakewharton:b165defa7204a9db93d2ab27f621cd65&#34;&gt;JakeWharton&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JakeWharton/flip-tables&#34;&gt;flip-tables&lt;/a&gt; &amp;nbsp;&amp;nbsp;Because pretty-printing text tables in Java should be easy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;yalantis:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Yalantis&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/Euclid&#34;&gt;Euclid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/CameraModule&#34;&gt;CameraModule&lt;/a&gt;&amp;nbsp;&amp;nbsp;Simple camera module for android applications&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/FlipViewPager.Draco&#34;&gt;FlipViewPager.Draco&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/Taurus&#34;&gt;Taurus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/Phoenix&#34;&gt;Phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/Side-Menu.Android&#34;&gt;Side-Menu.Android&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/Context-Menu.Android&#34;&gt;Context-Menu.Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;material-design:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Material Design&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mwolfson/android-historian&#34;&gt;android-historian&lt;/a&gt; &amp;nbsp;&amp;nbsp;A demo of the Android Material Design Support libraries&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/javiersantos/BottomDialogs&#34;&gt;BottomDialogs&lt;/a&gt; &amp;nbsp;&amp;nbsp;To show  a customizable Material-based bottom sheet.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DmitryMalkovich/material-design-dimens&#34;&gt;material-design-dimens&lt;/a&gt; &amp;nbsp;&amp;nbsp;Default colors and dimens per Material Design guidelines and Android Design guidelines inside one library.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/loonggg/CoordinatorLayoutDemo&#34;&gt;CoordinatorLayoutDemo&lt;/a&gt;&amp;nbsp;&amp;nbsp;使用CoordinatorLayout仿稀土掘金个人界面&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ozodrukh/CircularReveal&#34;&gt;CircularReveal&lt;/a&gt;&amp;nbsp;&amp;nbsp;Lollipop ViewAnimationUtils.createCircularReveal for everyone 4.0+&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ksoichiro/Android-ObservableScrollView&#34;&gt;ObservableScrollView&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android library to observe scroll events on scrollable views.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/material-design-icons&#34;&gt;material-design-icons&lt;/a&gt;&amp;nbsp;&amp;nbsp;Material Design icons by Google&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Flipboard/bottomsheet&#34;&gt;bottomsheet&lt;/a&gt; &amp;nbsp;&amp;nbsp;类似于知乎的分享&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hitherejoe/animate&#34;&gt;animate&lt;/a&gt;&amp;nbsp;&amp;nbsp;Material Style animations&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chrisbanes/cheesesquare&#34;&gt;cheesesquare&lt;/a&gt;&amp;nbsp;&amp;nbsp;Demos the new Android Design library.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/1sters/material_design_zh&#34;&gt;material_design_zh&lt;/a&gt;&amp;nbsp;&amp;nbsp;Material Design 中文协同翻译&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lightSky/Awesome-MaterialDesign&#34;&gt;Awesome-MaterialDesign&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android MaterialDesign res and libraries.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rey5137/material&#34;&gt;material&lt;/a&gt;A library to bring fully animated Material Design components to pre-Lolipop Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;数据库:b165defa7204a9db93d2ab27f621cd65&#34;&gt;数据库&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/greenrobot/greenDAO&#34;&gt;greenDAO&lt;/a&gt;&amp;nbsp;&amp;nbsp;GreenDao&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/LitePalFramework/LitePal&#34;&gt;LitePal&lt;/a&gt;&amp;nbsp;&amp;nbsp; LitePal&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oauth:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Oauth&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/oauth-simple&#34;&gt;oauth-simple&lt;/a&gt;&amp;nbsp;&amp;nbsp;forked from &lt;a href=&#34;https://github.com/scribejava/scribejava&#34;&gt;scribejava&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/scribejava/scribejava&#34;&gt;scribejava&lt;/a&gt;&amp;nbsp;&amp;nbsp;Simple OAuth library for Java&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wuman/android-oauth-client&#34;&gt;android-oauth-client&lt;/a&gt;&amp;nbsp;&amp;nbsp;A library that helps to easily add an OAuth flow to an existing Android application.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/elbbbird/ESSocialSDK&#34;&gt;ESSocialSDK&lt;/a&gt;社交登录授权、分享SDK，支持微信、微博和QQ。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/umeng/umeng_community_android&#34;&gt;umeng_community_android&lt;/a&gt;集成友盟微社区SDK的demo,包含了友盟微社区的所有资源以及jar文件。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;框架类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;框架类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/koush/ion&#34;&gt;ion&lt;/a&gt;&amp;nbsp;&amp;nbsp; Android网络及图片异步加载&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/greenrobot/EventBus&#34;&gt;EventBus&lt;/a&gt; &amp;nbsp;&amp;nbsp;时间总线&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/greenrobot/essentials/&#34;&gt;essentials&lt;/a&gt; &amp;nbsp;&amp;nbsp; 适合Android和Java的工具类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Bilibili/MagicaSakura&#34;&gt;MagicaSakura&lt;/a&gt; &amp;nbsp;&amp;nbsp; B站开源的多主题框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wequick/Small&#34;&gt;Small&lt;/a&gt;  &amp;nbsp;&amp;nbsp;Android 插件化&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yaming116/UpdateApp&#34;&gt;UpdateApp&lt;/a&gt; &amp;nbsp;&amp;nbsp;开箱即用的app更新，主要负责软件下载、软件安装等&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/WuXiaolong/AndroidUtils&#34;&gt;AndroidUtils&lt;/a&gt; &amp;nbsp;&amp;nbsp;Android常用类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/koral--/android-gif-drawable&#34;&gt;android-gif-drawable&lt;/a&gt; &amp;nbsp;&amp;nbsp;GIF&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/AndroidChangeSkin&#34;&gt;AndroidChangeSkin&lt;/a&gt; &amp;nbsp;&amp;nbsp;鸿洋大神的应用内换肤&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/chrisbanes/PhotoView&#34;&gt;PhotoView&lt;/a&gt; &amp;nbsp;&amp;nbsp;图片缩放&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/YoKeyword/Fragmentation&#34;&gt;Fragmentation&lt;/a&gt;&amp;nbsp;&amp;nbsp;为&amp;rdquo;单Activity ＋ 多Fragment&amp;rdquo;,&amp;ldquo;多模块Activity + 多Fragment&amp;rdquo;架构而生&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PaoloRotolo/AppIntro&#34;&gt;AppIntro&lt;/a&gt; &amp;nbsp;&amp;nbsp;很飒的APP导航页.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/medyo/android-about-page&#34;&gt;android-about-page&lt;/a&gt;&amp;nbsp;&amp;nbsp;Create an awesome About Page for your Android App in 2 minutes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/okhttp-utils&#34;&gt;okhttp-utils&lt;/a&gt;&amp;nbsp;&amp;nbsp;对okhttp的封装类&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bumptech/glide&#34;&gt;glide&lt;/a&gt;&amp;nbsp;&amp;nbsp;An image loading and caching library for Android focused on smooth scrolling&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lfkdsk/JustWeEngine&#34;&gt;JustWeEngine&lt;/a&gt;&amp;nbsp;&amp;nbsp;An easy open source Android Native Game FrameWork.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/code4craft/webmagic&#34;&gt;webmagic&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个开源的Java垂直爬虫框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/AndFix&#34;&gt;AndFix&lt;/a&gt;&amp;nbsp;&amp;nbsp;AndFix is a solution to fix the bugs online instead of redistributing Android App.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/alibaba/fastjson&#34;&gt;fastjson&lt;/a&gt;&amp;nbsp;&amp;nbsp;A fast JSON parser/generator for Java.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/AndroidAutoLayout&#34;&gt;AndroidAutoLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android屏幕适配方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wyouflf/xUtils3&#34;&gt;xUtils3&lt;/a&gt;&amp;nbsp;&amp;nbsp;android orm, bitmap, http, view inject&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/ChangeSkin&#34;&gt;ChangeSkin&lt;/a&gt;&amp;nbsp;&amp;nbsp;基于插件式的Android换肤框架&lt;/li&gt;
&lt;li&gt;[](&lt;a href=&#34;https://github.com/chrisbanes/PhotoView)&amp;nbsp;&amp;nbsp;Implementation&#34;&gt;https://github.com/chrisbanes/PhotoView)&amp;nbsp;&amp;nbsp;Implementation&lt;/a&gt; of ImageView for Android that supports zooming, by various touch gestures.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/loopj/android-async-http&#34;&gt;android-async-http&lt;/a&gt;&amp;nbsp;&amp;nbsp;An Asynchronous HTTP Library for Android&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nostra13/Android-Universal-Image-Loader&#34;&gt;Android-Universal-Image-Loader&lt;/a&gt;&amp;nbsp;&amp;nbsp;Powerful and flexible library for loading, caching and displaying images on Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hdodenhof/CircleImageView&#34;&gt;CircleImageView&lt;/a&gt;A circular ImageView for Android.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;工具类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;工具类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/think2011/localResizeIMG&#34;&gt;localResizeIMG&lt;/a&gt; &amp;nbsp;&amp;nbsp; 本地客户端压缩图片&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Zomato/AndroidPhotoFilters&#34;&gt;AndroidPhotoFilters&lt;/a&gt; &amp;nbsp;&amp;nbsp;图片滤镜 support API 15 and above. 可用于相机APP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Yalantis/uCrop&#34;&gt;uCrop&lt;/a&gt; &amp;nbsp;&amp;nbsp;图片剪裁 可用于相机APP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/baoyachi/StepView&#34;&gt;StepView&lt;/a&gt; &amp;nbsp;&amp;nbsp; 流程图 可用于完成任务阶段 快递送达阶段等&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/badoualy/stepper-indicator&#34;&gt;Stepper indicator&lt;/a&gt; &amp;nbsp;&amp;nbsp;Stepper indicator 类似于&lt;a href=&#34;https://github.com/baoyachi/StepView&#34;&gt;StepView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/laobie/StatusBarUtil&#34;&gt;StatusBarUtil&lt;/a&gt; &amp;nbsp;&amp;nbsp;4.4及其以上系统中实现 沉浸式状态栏/状态栏变色，支持设置状态栏透明度&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jgilfelt/SystemBarTint&#34;&gt;SystemBarTint&lt;/a&gt; DEPRECATED&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/H07000223/FlycoSystemBar&#34;&gt;FlycoSystemBar&lt;/a&gt;&amp;nbsp;&amp;nbsp; A Helper for SystemBar include StatusBar and NavigationBar.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shixinzhang/DistanceMeasure&#34;&gt;DistanceMeasure&lt;/a&gt; &amp;nbsp;&amp;nbsp;Android 拍照测距&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/florent37/Carpaccio&#34;&gt;Carpaccio&lt;/a&gt;&amp;nbsp;&amp;nbsp;Data Mapping &amp;amp; Smarter Views framework for android&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jarlen/PhotoEditDemo&#34;&gt;PhotoEditDemo&lt;/a&gt;&amp;nbsp;&amp;nbsp;图片处理sdk&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/HugoMatilla/AudioPlayerView&#34;&gt;AudioPlayerView&lt;/a&gt;&amp;nbsp;&amp;nbsp;AudioPlayerView is an Android view that loads audio from an url and have basic playback tools.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/siyamed/android-shape-imageview&#34;&gt;android-shape-imageview&lt;/a&gt;&amp;nbsp;&amp;nbsp;Custom shaped android imageview components.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wenmingvs/NotifyUtil&#34;&gt;NotifyUtil&lt;/a&gt;&amp;nbsp;&amp;nbsp;高仿淘宝，网易新闻，微信，应用宝，环聊等等热门App的通知视图，并且完通知工具类的封装&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FolioReader/FolioReader-Android&#34;&gt;FolioReader-Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;A Java ePub reader and parser framework for Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/trello/RxLifecycle&#34;&gt;RxLifecycle&lt;/a&gt;&amp;nbsp;&amp;nbsp;Lifecycle handling APIs for Android apps using RxJava.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GTBrowser/Jndroid.js&#34;&gt;Jndroid&lt;/a&gt;&amp;nbsp;&amp;nbsp;Jndroid is a JavaScript framework to write WebApp in Android way.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/litesuits/android-common&#34;&gt;android-common&lt;/a&gt;&amp;nbsp;&amp;nbsp;一系列通用类、辅助类、工具类的集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ashqal/NightOwl&#34;&gt;NightOwl&lt;/a&gt;&amp;nbsp;&amp;nbsp;switching day/night mode on Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mthli/Knife&#34;&gt;Knife&lt;/a&gt;&amp;nbsp;&amp;nbsp;丰富的文本编辑组件.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qiujuer/Genius-Android&#34;&gt;Genius-Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;由 Material Design 控件和一些常用类库组合而成。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amlcurran/ShowcaseView&#34;&gt;ShowcaseView&lt;/a&gt;&amp;nbsp;&amp;nbsp;Highlight the best bits of your app to users quickly, simply, and cool&amp;hellip;ly&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/FlowLayout&#34;&gt;FlowLayout&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android流式布局，支持单选、多选等，适合用于产品标签等。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-quick-dev/NonViewUtils&#34;&gt;NonViewUtils&lt;/a&gt;&amp;nbsp;&amp;nbsp;不涉及视图的工具类，逻辑类的集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rharter/android-gesture-detectors&#34;&gt;android-gesture-detectors&lt;/a&gt;&amp;nbsp;&amp;nbsp;Gesture detector framework for multitouch handling on Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/Android-Next&#34;&gt;Android-Next&lt;/a&gt;&amp;nbsp;&amp;nbsp;mcxiaoke在日常开发过程中积累下来的一些可复用组件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Trinea/android-common&#34;&gt;android-common-lib&lt;/a&gt;&amp;nbsp;&amp;nbsp;主要包括：缓存(图片缓存、预取缓存、网络缓存)、公共View(下拉及底部加载更多ListView、底部加载更多ScrollView、滑动一页Gallery)及Android常用工具类(网络、下载、Android资源操作、shell、文件、Json、随机数、Collection等等)。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/drakeet/BreathingViewHelper&#34;&gt;BreathingViewHelper&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个简单的小工具类，用来设置警示 View 的呼吸式背景颜色&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/excilys/androidannotations&#34;&gt;androidannotations&lt;/a&gt;&amp;nbsp;&amp;nbsp;Fast Android Development. Easy maintainance.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vinc3m1/RoundedImageView&#34;&gt;RoundedImageView&lt;/a&gt;&amp;nbsp;&amp;nbsp;A fast ImageView that supports rounded corners, ovals, and circles.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Bilibili/DanmakuFlameMaster&#34;&gt;DanmakuFlameMaster&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android开源弹幕引擎·烈焰弹幕使 ～&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FacePlusPlus/facepp-java-sdk&#34;&gt;facepp-java-sdk&lt;/a&gt;&amp;nbsp;&amp;nbsp;Face++ SDK for Java, can be used in Android project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;架构类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;架构类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/north2014/T-MVP&#34;&gt;T-MVP&lt;/a&gt;&amp;nbsp;&amp;nbsp;泛型深度解耦下的MVP大瘦身&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;android-studio-工具类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Android Studio 工具类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/u3shadow/RemoveButterKnife&#34;&gt;RemoveButterKnife&lt;/a&gt; &amp;nbsp;&amp;nbsp; 帮助移除ButterKnife的插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/orhanobut/logger&#34;&gt;logger&lt;/a&gt; &amp;nbsp;&amp;nbsp;简介，美观且强大的Logger&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Skykai521/ECTranslation&#34;&gt;ECTranslation&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android Studio 翻译插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pengwei1024/LogUtils&#34;&gt;LogUtils&lt;/a&gt;&amp;nbsp;&amp;nbsp;More convenient and easy to use android Log manager.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/gradle-packer-plugin&#34;&gt;gradle-packer-plugin&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android渠道打包工具Gradle插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GavinCT/AndroidMultiChannelBuildTool&#34;&gt;AndroidMultiChannelBuildTool&lt;/a&gt;&amp;nbsp;&amp;nbsp;安卓多渠道打包工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/romainguy/ViewServer&#34;&gt;ViewServer&lt;/a&gt;&amp;nbsp;&amp;nbsp;ViewServer is a simple class you can use in your Android application to use the HierarchyViewer inspection tool.&amp;nbsp;&amp;nbsp;API12+&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/packer-ng-plugin&#34;&gt;packer-ng-plugin&lt;/a&gt;&amp;nbsp;&amp;nbsp;下一代Android打包工具，1000个渠道包只需要5秒&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/iBotPeaches/Apktool&#34;&gt;Apktool&lt;/a&gt;&amp;nbsp;&amp;nbsp;It is a tool for reverse engineering 3rd party, closed, binary Android apps.&lt;/li&gt;
&lt;li&gt;[](&lt;a href=&#34;https://github.com/checkstyle/checkstyle)&amp;nbsp;&amp;nbsp;Checkstyle&#34;&gt;https://github.com/checkstyle/checkstyle)&amp;nbsp;&amp;nbsp;Checkstyle&lt;/a&gt; is a development tool to help programmers write Java code that adheres to a coding standard.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pedrovgs/AndroidWiFiADB&#34;&gt;AndroidWiFiADB&lt;/a&gt;&amp;nbsp;&amp;nbsp;IntelliJ/AndroidStudio plugin which provides a button to connect your Android device over WiFi to install, run and debug your applications without a USB connected.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cundong/MemoryMonitor&#34;&gt;MemoryMonitor&lt;/a&gt; &amp;nbsp;&amp;nbsp;一个给开发者使用的Android App内存清理、监控工具。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;测试类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;测试类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fabioCollini/LifeCycleBinder&#34;&gt;LifeCycleBinder&lt;/a&gt; &amp;nbsp;&amp;nbsp;测试Activity,Fragment生命周期&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/txusballesteros/Android-Clean-Testing&#34;&gt;Android-Clean-Testing&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android Testing Sample Project.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/square/leakcanary&#34;&gt;leakcanary&lt;/a&gt;&amp;nbsp;&amp;nbsp;A memory leak detection library for Android and Java.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;权限相关:b165defa7204a9db93d2ab27f621cd65&#34;&gt;权限相关&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tajchert/Nammu&#34;&gt;Nammu&lt;/a&gt; &amp;nbsp;&amp;nbsp;后台监听权限并回调&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;资源类:b165defa7204a9db93d2ab27f621cd65&#34;&gt;资源类&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ruijun/Android-Dev-Favorites&#34;&gt;Android-Dev-Favorites&lt;/a&gt; &amp;nbsp;&amp;nbsp; 收集Android开发相关知识合集&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/google-api-go-client&#34;&gt;google-api-go-client&lt;/a&gt; &amp;nbsp;&amp;nbsp; Auto-generated Google APIs for Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kaedea/android-dynamical-loading&#34;&gt;android-dynamical-loading&lt;/a&gt;&amp;nbsp;&amp;nbsp; Android 动态加载相关资料&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/envyfan/AndroidReview&#34;&gt;AndroidReview&lt;/a&gt; &amp;nbsp;&amp;nbsp;Android面试复习资料&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/DiyCodes/code_news&#34;&gt;Diycode&lt;/a&gt; &amp;nbsp;&amp;nbsp;Diycode每日精选&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Idtk/Blog&#34;&gt;CustomViewBlog&lt;/a&gt; &amp;nbsp;&amp;nbsp;自定义View资料&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/futurice/android-best-practices&#34;&gt;android-best-practices&lt;/a&gt; &amp;nbsp;&amp;nbsp;Futurice的课程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pubyun/macdev&#34;&gt;macdev&lt;/a&gt;&amp;nbsp;&amp;nbsp;使用Mac作为开发工具的过程中的一些体会做个记录和整理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Trinea/android-open-project&#34;&gt;Trinea/android-open-project&lt;/a&gt; Android开源项目集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hzlzh/Best-App&#34;&gt;Best-App&lt;/a&gt; &amp;nbsp;&amp;nbsp;Mac 神兵利器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geeeeeeeeek/git-recipes&#34;&gt;git-recipes&lt;/a&gt;&amp;nbsp;&amp;nbsp;高质量的Git中文教程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/msdx/android-proguard-cn&#34;&gt;android-proguard-cn&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android混淆规则&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rujews/android-gradle-book-code&#34;&gt;android-gradle-book-code&lt;/a&gt;&amp;nbsp;&amp;nbsp;《Android Gradle权威指南》的示例代码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mobileperfman/BookResource&#34;&gt;Android终端专项宝典及资源&lt;/a&gt;&amp;nbsp;&amp;nbsp;适用：终端专项测试&amp;nbsp;&amp;nbsp; 终端系统测试 &amp;nbsp;&amp;nbsp;高级终端开发&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/GcsSloop/AndroidNote&#34;&gt;AndroidNote&lt;/a&gt;&amp;nbsp;&amp;nbsp; 安卓自定义View进阶系列教程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/LittleFriendsGroup/AndroidSdkSourceAnalysis&#34;&gt;AndroidSdkSourceAnalysis&lt;/a&gt;&amp;nbsp;&amp;nbsp; android sdk 源码解析&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/asLody/TurboDex/&#34;&gt;TurboDex&lt;/a&gt;&amp;nbsp;&amp;nbsp;TurboDex: 在Android瞬间加载Dex&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sfsheng0322/In-depthStudy&#34;&gt;In-depthStudy&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android 深入学习工程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/phodal/growth-ebook&#34;&gt;growth-ebook&lt;/a&gt;&amp;nbsp;&amp;nbsp;《全栈增长工程师指南》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/kotlin-notes&#34;&gt;kotlin-notes&lt;/a&gt;&amp;nbsp;&amp;nbsp;Kotlin中文教程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jiangqqlmj/FastDev4Android&#34;&gt;FastDev4Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android快速开发框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Freelander/Android_Data&#34;&gt;Android_Data&lt;/a&gt; &amp;nbsp;&amp;nbsp;Android学习资料收集&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Jacksgong/JKeyboardPanelSwitch&#34;&gt;JKeyboardPanelSwitch&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android键盘面板冲突 布局闪动处理方案&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Nightonke/LeeCo&#34;&gt;LeeCo&lt;/a&gt; &amp;nbsp;&amp;nbsp;超过300道面试算法题，29个分类，详尽的题解、讨论和评论&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ZhaoKaiQiang/AndroidDifficultAnalysis&#34;&gt;AndroidDifficultAnalysis&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android 重难点解析&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/giantray/stackoverflow-java-top-qa&#34;&gt;stackoverflow-java-top-qa&lt;/a&gt;&amp;nbsp;&amp;nbsp;stackoverflow上Java相关回答整理翻译&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hehonghui/android_dp_analysis_code&#34;&gt;android_dp_analysis_code&lt;/a&gt;&amp;nbsp;&amp;nbsp;《Android 源码设计模式解析与实战》示例代码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pedrovgs/Algorithms&#34;&gt;Algorithms&lt;/a&gt;&amp;nbsp;&amp;nbsp;Solutions for some common algorithm problems written in Java.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wenmingvs/AndroidProcess&#34;&gt;AndroidProcess&lt;/a&gt;&amp;nbsp;&amp;nbsp;6种方法来判断App处于前台还是后台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simple-android-framework-exchange/the-fucking-traps-in-android-dev&#34;&gt;开发过程中遇到的坑&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pcqpcq/open-source-android-apps&#34;&gt;open-source-android-apps&lt;/a&gt; &amp;nbsp;&amp;nbsp;开源APP集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ReactiveX/RxAndroid&#34;&gt;RxAndroid&lt;/a&gt;&amp;nbsp;&amp;nbsp;RxJava bindings for Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mmin18/AndroidDynamicLoader&#34;&gt;AndroidDynamicLoader&lt;/a&gt;&amp;nbsp;&amp;nbsp;动态加载插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wangjiegulu/kotlin-for-android-developers-zh&#34;&gt;kotlin-for-android-developers-zh&lt;/a&gt;&amp;nbsp;&amp;nbsp;Kotlin for android developers in chinese.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nekocode/kotgo&#34;&gt;kotgo&lt;/a&gt; &amp;nbsp;&amp;nbsp; An android development framework on kotlin using MVP architecture.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-cn/android-discuss&#34;&gt;android-discuss&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android 问题交流讨论坛&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/androidmalin/RengwuxianRxjava&#34;&gt;RengwuxianRxjava&lt;/a&gt;&amp;nbsp;&amp;nbsp;RxJava 入门教程&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/reactnativecn/react-native-guide&#34;&gt;react-native-guide&lt;/a&gt;&amp;nbsp;&amp;nbsp;React-Native学习指南&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jobbole/awesome-java-cn&#34;&gt;awesome-java-cn&lt;/a&gt;&amp;nbsp;&amp;nbsp;Java资源大全中文版&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/julycoding/The-Art-Of-Programming-By-July&#34;&gt;The-Art-Of-Programming-By-July&lt;/a&gt;&amp;nbsp;&amp;nbsp;July的新书《编程之法：面试和算法心得》&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shwenzhang/AndResGuard/&#34;&gt;AndResGuard&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android资源混淆工具使用说明&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/xitu/gold-miner&#34;&gt;gold-miner&lt;/a&gt;&amp;nbsp;&amp;nbsp;掘金翻译计划，翻译掘金上优质的英文文章&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vbauer/android-arsenal.com&#34;&gt;android-arsenal&lt;/a&gt;&amp;nbsp;&amp;nbsp;Source to android-arsenal.herokuapp.com.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/desmond1121/Android-Ptr-Comparison&#34;&gt;Android-Ptr-Comparison&lt;/a&gt;&amp;nbsp;&amp;nbsp;安卓下拉刷新开源库对比&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/singwhatiwanna/dynamic-load-apk&#34;&gt;dynamic-load-apk&lt;/a&gt;&amp;nbsp;&amp;nbsp;Apk动态加载框架&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Macarse/50AH-code&#34;&gt;50AH-code&lt;/a&gt;&amp;nbsp;&amp;nbsp;50 Android Hacks book source code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/vhf/free-programming-books&#34;&gt;免费编程书资源&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leerduo/InterviewQuestion&#34;&gt;InterviewQuestion&lt;/a&gt;&amp;nbsp;&amp;nbsp;整理的常见的问题.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/simple-android-framework/android_design_patterns_analysis&#34;&gt;android_design_patterns_analysis&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android源码设计模式分析项目.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zmywly8866/Worth-Reading-the-Android-technical-articles&#34;&gt;值得阅读的android技术文章&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fython/BilibiliAPIDocs&#34;&gt;BilibiliAPIDocs&lt;/a&gt;&amp;nbsp;&amp;nbsp;Bilibili API 第三方文档&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-cn/android-open-project-analysis&#34;&gt;android-open-project-analysis&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android 开源项目源码解析&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-cn/android-dev-com&#34;&gt;android-dev-com&lt;/a&gt;&amp;nbsp;&amp;nbsp;国外著名公司及开发者信息&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/android-cn/android-dev-cn&#34;&gt;android-dev-cn&lt;/a&gt;&amp;nbsp;&amp;nbsp;国内部分开发者信息&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Aufree/trip-to-iOS&#34;&gt;trip-to-iOS&lt;/a&gt;&amp;nbsp;&amp;nbsp;iOS学习资料整理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Trinea/android-common&#34;&gt;android-common-lib&lt;/a&gt;&amp;nbsp;&amp;nbsp;主要包括：缓存(图片缓存、预取缓存、网络缓存)、公共View(下拉及底部加载更多ListView、底部加载更多ScrollView、滑动一页Gallery)及Android常用工具类(网络、下载、Android资源操作、shell、文件、Json、随机数、Collection等等)。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hongyangAndroid/Android_Blog_Demos&#34;&gt;hongyangAndroid-BlogDemos&lt;/a&gt;&amp;nbsp;&amp;nbsp;hongyang大神存储CSDN博客的一些源码&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/1sters/material_design_zh&#34;&gt;material_design_zh&lt;/a&gt;&amp;nbsp;&amp;nbsp;Material Design 中文协同翻译&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hehonghui/android-tech-frontier&#34;&gt;android-tech-frontier&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android开发技术前线&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lzyzsd/Awesome-RxJava&#34;&gt;Awesome-RxJava&lt;/a&gt;&amp;nbsp;&amp;nbsp;RxJava resources&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FX-Max/Point-of-Android&#34;&gt;Point-of-Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android 一些重要知识点解析整理&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kesenhoo/android-training-course-in-chinese&#34;&gt;android-training-course-in-chinese&lt;/a&gt;&amp;nbsp;&amp;nbsp;Android官方培训课程中文版&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;app:b165defa7204a9db93d2ab27f621cd65&#34;&gt;APP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/oxplot/bradybound&#34;&gt;bradybound&lt;/a&gt;&amp;nbsp;&amp;nbsp; Android下载限速&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/oubowu/OuNews&#34;&gt;OuNews&lt;/a&gt; &amp;nbsp;&amp;nbsp;基于MVP的新闻客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maoruibin/TranslateApp&#34;&gt;TranslateApp&lt;/a&gt; &amp;nbsp;&amp;nbsp;『划词翻译』功能的 Android 应用&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fewwind/ZhiHu-Daily&#34;&gt;ZhiHu-Daily&lt;/a&gt; &amp;nbsp;&amp;nbsp;知乎日报&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/YiuChoi/MicroReader&#34;&gt;MicroReader&lt;/a&gt;&amp;nbsp;&amp;nbsp;基于MVP的阅读客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/CzBiX/v2ex-android&#34;&gt;v2ex&lt;/a&gt; &amp;nbsp;&amp;nbsp;v2ex&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nekocode/murmur&#34;&gt;murmur&lt;/a&gt; &amp;nbsp;&amp;nbsp;Murmur 是一个带 白噪声 效果的豆瓣电台第三方客户端。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/qinci/MarkdownEditors&#34;&gt;MarkdownEditors&lt;/a&gt; &amp;nbsp;&amp;nbsp;Android Markdown编辑器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Nightonke/LeeCo&#34;&gt;LeeCo&lt;/a&gt; &amp;nbsp;&amp;nbsp;超过300道面试算法题，29个分类，详尽的题解、讨论和评论&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nickbutcher/plaid&#34;&gt;plaid&lt;/a&gt;  &amp;nbsp;&amp;nbsp;Design news and inspiration.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/PaperAirplane-Dev-Team/BlackLight&#34;&gt;BlackLight&lt;/a&gt;&amp;nbsp;&amp;nbsp;A light Sina Weibo client for Android&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AzeeSoft/AndroidPhotoshopColorPicker&#34;&gt;AndroidPhotoshopColorPicker&lt;/a&gt;&amp;nbsp;&amp;nbsp;A full featured Color picker Library for Android! Just like the one in Photoshop!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/motianhuo/wechat&#34;&gt;wechat&lt;/a&gt;&amp;nbsp;&amp;nbsp;高仿微信&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/motianhuo/VCameraDemo&#34;&gt;VCameraDemo&lt;/a&gt;&amp;nbsp;&amp;nbsp;微信小视频+秒拍&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pcqpcq/open-source-android-apps&#34;&gt;open-source-android-apps&lt;/a&gt; &amp;nbsp;&amp;nbsp;开源APP集合&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/izzyleung/ZhihuDailyPurify&#34;&gt;ZhihuDailyPurify&lt;/a&gt;&amp;nbsp;&amp;nbsp;更纯净的知乎日报&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SkillCollege/SimplifyReader&#34;&gt;SimplifyReader&lt;/a&gt;&amp;nbsp;&amp;nbsp;简阅&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/joyoyao/superCleanMaster&#34;&gt;superCleanMaster&lt;/a&gt;&amp;nbsp;&amp;nbsp;一键清理 开源版，包括内存加速，缓存清理，自启管理，软件管理等。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/leancloud/leanmessage-demo&#34;&gt;LeanCloud-Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/drakeet/Meizhi&#34;&gt;Meizhi&lt;/a&gt;&amp;nbsp;&amp;nbsp;gank.io unofficial client, RxJava &amp;amp; Retrofit.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mthli/Ninja&#34;&gt;Ninja&lt;/a&gt;&amp;nbsp;&amp;nbsp;Yet another web browser for Android.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mikeroelens/HungerMoji&#34;&gt;HungerMoji&lt;/a&gt;&amp;nbsp;&amp;nbsp;Notification Game&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/googlecreativelab/meter&#34;&gt;meter&lt;/a&gt;&amp;nbsp;&amp;nbsp;Meter is a data-driven wallpaper that displays your battery, wireless signal and notifications.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fython/BiliNyan-Android&#34;&gt;BiliNyan-Android&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个 Material Design 风格的第三方哔哩哔哩 Android 客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/MrNerverDie/MiniWeChat-Client&#34;&gt;MiniWeChat-Client&lt;/a&gt;&amp;nbsp;&amp;nbsp;一个基于Unity3D的微信客户端，客户端使用了MVVM架构，并使用protobuf作为网络协议生成语言。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cundong/ZhihuPaper&#34;&gt;ZhihuPaper&lt;/a&gt; &amp;nbsp;&amp;nbsp;一个知乎日报客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mcxiaoke/minicat&#34;&gt;minicat&lt;/a&gt;简介的饭否APP&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;python:b165defa7204a9db93d2ab27f621cd65&#34;&gt;Python&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wklken/stackoverflow-py-top-qa&#34;&gt;stackoverflow-py-top-qa&lt;/a&gt;&amp;nbsp;&amp;nbsp;stackoverflow上Python相关回答整理翻译&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/7sDream/zhihu-py3&#34;&gt;zhihu-py3&lt;/a&gt;&amp;nbsp;&amp;nbsp;知乎非官方API库 with Python3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/7sDream/zhihu-oauth&#34;&gt;zhihu-oauth&lt;/a&gt;&amp;nbsp;&amp;nbsp;尝试解析出知乎官方未开放的 OAuth2 接口&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lepture/mistune&#34;&gt;mistune&lt;/a&gt;&amp;nbsp;&amp;nbsp;The fastest markdown parser in pure Python with renderer feature, inspired by marked and misaka.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;前端:b165defa7204a9db93d2ab27f621cd65&#34;&gt;前端&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nieweidong/fetool&#34;&gt;fetool&lt;/a&gt;  &amp;nbsp;&amp;nbsp;大前端的瑞士军刀 前端的一些资料，工具等&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tobiasahlin/SpinKit&#34;&gt;SpinKit&lt;/a&gt;  &amp;nbsp;&amp;nbsp;用CSS制作的加载指示器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fians/Waves&#34;&gt;Waves&lt;/a&gt; &amp;nbsp;&amp;nbsp; Click effect inspired by Google&amp;rsquo;s Material Design &lt;a href=&#34;http://fian.my.id/Waves/&#34;&gt;http://fian.my.id/Waves/&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/FortAwesome/Font-Awesome&#34;&gt;Font-Awesome&lt;/a&gt; &amp;nbsp;&amp;nbsp; The iconic font and CSS framework.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/material-design-icons&#34;&gt;material-design-icons&lt;/a&gt; &amp;nbsp;&amp;nbsp; Material Design icons by Google.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ScottSavarie/Clipboard-Fill&#34;&gt;Clipboard-Fill&lt;/a&gt;  &amp;nbsp;&amp;nbsp; Sketch plugin to paste an image from your clipboard as the fill for any shape.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nullice/NViconsLib_Silhouette&#34;&gt;NViconsLib_Silhouette&lt;/a&gt;&amp;nbsp;&amp;nbsp;全矢量图标&amp;amp;覆盖主流网站图标.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;流媒体:b165defa7204a9db93d2ab27f621cd65&#34;&gt;流媒体&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/arut/nginx-rtmp-module&#34;&gt;nginx-rtmp-module&lt;/a&gt; &amp;nbsp;&amp;nbsp; 搭建rtmp流媒体服务器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Red5/red5-server&#34;&gt;red5-server&lt;/a&gt;  &amp;nbsp;&amp;nbsp;Red5&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pili-engineering/PLDroidPlayer&#34;&gt;PLDroidPlayer&lt;/a&gt;&amp;nbsp;&amp;nbsp;七牛云出品 支持RTMP&amp;amp;HLS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Bilibili/ijkplayer&#34;&gt;ijkplayer&lt;/a&gt; B站出品 支持RTMP&amp;amp;HLS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SinaVDDeveloper/demo&#34;&gt;SinaVDDeveloper_Demo&lt;/a&gt; sina出品 支持HLS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SinaVDDeveloper/sinavideo_playercore&#34;&gt;sinavideo_playercore&lt;/a&gt;sina出品 支持HLS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SinaVDDeveloper/sinavideo_playersdk&#34;&gt;sinavideo_playersdk&lt;/a&gt;sina出品 支持HLS&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/daniulive/SmarterStreaming&#34;&gt;SmarterStreaming&lt;/a&gt;支持RTMP&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yixia/VitamioBundle&#34;&gt;VitamioBundle&lt;/a&gt;Vitamio 个人免费 支持RTMP&amp;amp;HLS&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;杂七杂八:b165defa7204a9db93d2ab27f621cd65&#34;&gt;杂七杂八&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/be5invis/Iosevka&#34;&gt;Iosevka&lt;/a&gt; &amp;nbsp;&amp;nbsp; 字体&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shadowsocks/Potatso-iOS&#34;&gt;Potatso-iOS&lt;/a&gt;  &amp;nbsp;&amp;nbsp;Shadowsocks in iOS 9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/yumemor/ysale-sms&#34;&gt;ysale-sms&lt;/a&gt; &amp;nbsp;&amp;nbsp;由 NodeJs 实现的短信轰炸器&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geeeeeeeeek/electronic-wechat&#34;&gt;electronic-wechat&lt;/a&gt; &amp;nbsp;&amp;nbsp;Mac上更好的微信客户端&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/github/gitignore&#34;&gt;gitignore&lt;/a&gt;&amp;nbsp;&amp;nbsp; gitignore 模板&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tj/parse-curl.js&#34;&gt;parse-curl.js&lt;/a&gt;&amp;nbsp;&amp;nbsp;Parse curl commands, returning an object representing the request.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/toddmotto/public-apis&#34;&gt;public-apis&lt;/a&gt;&amp;nbsp;&amp;nbsp;A collective list of public JSON APIs for use in web development.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/getlantern/forum&#34;&gt;forum&lt;/a&gt; &amp;nbsp;&amp;nbsp;FQ软件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anasnakawa/chrome-github-avatars&#34;&gt;chrome-github-avatars&lt;/a&gt;&amp;nbsp;&amp;nbsp;Display user avatars on the Github news feed.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/izacus/RoboGif&#34;&gt;RoboGif&lt;/a&gt; &amp;nbsp;&amp;nbsp;A small utility to record Android device screen to a GIF&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ben174/git-draw&#34;&gt;git-draw&lt;/a&gt;&amp;nbsp;&amp;nbsp;Allows you to draw in your github heatmap.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sunxu3074/AutoRobRedPackage&#34;&gt;AutoRobRedPackage&lt;/a&gt;&amp;nbsp;&amp;nbsp;微信自动抢红包插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zenorocha/alfred-workflows&#34;&gt;alfred-workflows)&lt;/a&gt;&amp;nbsp;&amp;nbsp;A collection of Alfred 2 workflows that will rock your world.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/geeeeeeeeek/WeChatLuckyMoney&#34;&gt;WeChatLuckyMoney&lt;/a&gt;&amp;nbsp;&amp;nbsp;微信抢红包插件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/0x5e/wechat-deleted-friends&#34;&gt;wechat-deleted-friends&lt;/a&gt;&amp;nbsp;&amp;nbsp;查看被删的微信好友&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wzyuliyang/qiniu4blog&#34;&gt;qiniu4blog&lt;/a&gt;&amp;nbsp;&amp;nbsp;使用七牛云存储创建自己的图床,用于写博客&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hackerzhou/Love&#34;&gt;Love&lt;/a&gt;&amp;nbsp;&amp;nbsp;浪漫love静态页面- -&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gentilkiwi/mimikatz&#34;&gt;mimikatz&lt;/a&gt;&amp;nbsp;&amp;nbsp;A little tool to play with Windows security &lt;a href=&#34;http://blog.gentilkiwi.com/mimikatz&#34;&gt;http://blog.gentilkiwi.com/mimikatz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/racaljk/hosts&#34;&gt;hosts&lt;/a&gt;&amp;nbsp;&amp;nbsp;最新可用的google hosts文件。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>《Android 50 Hacks》读书笔记-布局篇</title>
      <link>http://sunxu.work/android/android-50-hack-part-1/</link>
      <pubDate>Mon, 04 Jan 2016 18:06:04 CST</pubDate>
      <author>Xu Sun</author>
      <guid>http://sunxu.work/android/android-50-hack-part-1/</guid>
      <description>

&lt;p&gt;最近在&lt;a href=&#34;http://www.it-ebooks.info/&#34;&gt;http://www.it-ebooks.info/&lt;/a&gt;看见了一本《50 Android Hacks》,感觉还好.在这里写一下读书笔记.&lt;/p&gt;

&lt;p&gt;前言:&lt;/p&gt;

&lt;p&gt;我不知道作为一个没过四级的人是怎么看完这本书的.记得以前英语考试时,读阅读时总是不耐心,读着读着就烦气了.后来的考试总是喜欢看着答案蒙.至于现在为什么能耐心阅读关于计算机的一些英文文档,可能就是我对自己有野心,对程序员这个行业有野心吧.希望有一天我能骄傲地跟别人说我是一个程序员.&lt;/p&gt;

&lt;h3 id=&#34;hack-1-centering-views-using-weights-android-v1-6:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;Hack 1 Centering views using weights (Android v1.6+)&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;What should I write if I want a but- ton to be centered and 50% of its parent width?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
android:layout_width=&amp;quot;fill_parent&amp;quot;
android:layout_height=&amp;quot;fill_parent&amp;quot;
android:background=&amp;quot;#FFFFFF&amp;quot;
android:gravity=&amp;quot;center&amp;quot;
android:orientation=&amp;quot;horizontal&amp;quot;
android:weightSum=&amp;quot;1&amp;quot;&amp;gt;
&amp;lt;Button
    android:layout_width=&amp;quot;0dp&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    android:layout_weight=&amp;quot;0.5&amp;quot;
    android:text=&amp;quot;Click me&amp;quot;/&amp;gt;
&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意LinearLayout中的属性 &lt;em&gt;android:weightSum&lt;/em&gt; . 默认情况下weightSum的值是父控件里面所有child的数量.&lt;/p&gt;

&lt;p&gt;上面这段代码实现了button的width是父控件的50%.
&amp;gt;计算公式:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Button&amp;rsquo;s width + Button&amp;rsquo;s weight * 200 / sum(weight);(假设LinearLayout的宽度是200)&lt;/p&gt;

&lt;p&gt;也就是 控件宽度+父控件剩余宽度*比例 (首先按照控件声明的尺寸进行分配,然后剩下的尺寸按照weight分配)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;hack-2-using-lazy-loading-and-avoiding-replication-android-v1-6:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;Hack 2 Using lazy loading and avoiding replication (Android v1.6+)&lt;/h3&gt;

&lt;p&gt;这个技巧将会学到:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;用 &lt;em&gt;include&lt;/em&gt; 标签避免xml代码的重复&lt;/li&gt;
&lt;li&gt;使用ViewStub Class实现视图的懒加载&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;2-1-avoid-replication-using-the-include-tag:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;2.1 Avoid replication using the &lt;include /&gt; tag&lt;/h4&gt;

&lt;p&gt;我们想象一下在我们应用的每一个页面中添加一个同样的页脚,例如一个只带有应用名字的TextView.如果我们有很多个Activity,很多个xml文件.我们该怎么编辑它们?复制粘贴将会解决这个问题,但是看上去不是高效的.一个简单的途径就是用 &lt;em&gt;include&lt;/em&gt; 标签添加这个页脚到我们应用里.我们的其中一个Activity的xml文件就可以像这样:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
   &amp;gt;
  &amp;lt;TextView
    android:layout_width=&amp;quot;fill_parent&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    android:layout_centerInParent=&amp;quot;true&amp;quot;
    android:gravity=&amp;quot;center_horizontal&amp;quot;
    android:text=&amp;quot;@string/hello&amp;quot;/&amp;gt;
  &amp;lt;include layout=&amp;quot;@layout/footer&amp;quot;/&amp;gt;
&amp;lt;/RelativeLayout/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;footer的xml代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt; &amp;lt;TextView xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:layout_alignParentBottom=&amp;quot;true&amp;quot;
        android:layout_marginBottom=&amp;quot;30dp&amp;quot;
        android:gravity=&amp;quot;center_horizontal&amp;quot;
        android:text=&amp;quot;@string/footer_text&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在第一个例子里面,我们在单独的footer.xml定义属性.可当Activity的xml中父控件是LinearLayout呢?我们再在footer.xml定义上面这些属性就无效了,因为像android:layout_marginBottom这些属性是在RelativeLayout才有效的.下面介绍第二种方式,在 &lt;em&gt;include&lt;/em&gt; 标签内定义android:layout_*这些属性.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;

        &amp;lt;TextView
            android:layout_width=&amp;quot;fill_parent&amp;quot;
            android:layout_height=&amp;quot;wrap_content&amp;quot;
            android:layout_centerInParent=&amp;quot;true&amp;quot;
            android:gravity=&amp;quot;center_horizontal&amp;quot;
            android:text=&amp;quot;@string/hello&amp;quot;/&amp;gt;

        &amp;lt;include
            layout=&amp;quot;@layout/footer&amp;quot;
            android:layout_width=&amp;quot;fill_parent&amp;quot;
            android:layout_height=&amp;quot;wrap_content&amp;quot;
            android:layout_alignParentBottom=&amp;quot;true&amp;quot;
            android:layout_marginBottom=&amp;quot;30dp&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改过后的footer.xml:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;TextView xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
            android:layout_width=&amp;quot;0dp&amp;quot;
            android:layout_height=&amp;quot;0dp&amp;quot;
            android:gravity=&amp;quot;center&amp;quot;
            android:text=&amp;quot;@string/footer_text&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;注意footer.xml中的宽和高都要设置才能被有效覆盖.&lt;/p&gt;

&lt;h4 id=&#34;2-2-lazy-loading-views-with-the-viewstub-class:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;2.2 Lazy loading views with the ViewStub class&lt;/h4&gt;

&lt;p&gt;ViewStub Class:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A ViewStub is an invisible, zero-sized View that can be used to lazily inflate layout resources at runtime. When a ViewStub is made visible, or when inflate() is invoked, the layout resource is inflated. The ViewStub then replaces itself in its parent with the inflated View or Views.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;你已经知道了ViewStub是什么,让我们来看一下该怎么用.在下面的例子中,你将会用一个ViewStub去懒加载 &lt;em&gt;MapView&lt;/em&gt; .想象创建一个用来描述地方详细信息的View.我们来看以下两种情况:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;一些地区没有GPS信息&lt;/li&gt;
&lt;li&gt;用户可能不需要地图展示&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SampleCode:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;

        &amp;lt;Button
            android:layout_width=&amp;quot;fill_parent&amp;quot;
            android:layout_height=&amp;quot;wrap_content&amp;quot;
            android:text=&amp;quot;@string/show_map&amp;quot;
            android:onClick=&amp;quot;onShowMap&amp;quot;/&amp;gt;

        &amp;lt;ViewStub
            android:id=&amp;quot;@+id/map_stub&amp;quot;
            android:layout_width=&amp;quot;fill_parent&amp;quot;
            android:layout_height=&amp;quot;fill_parent&amp;quot;
            android:layout=&amp;quot;@layout/map&amp;quot;
            android:inflatedId=&amp;quot;@+id/map_view&amp;quot;/&amp;gt;
    &amp;lt;/RelativeLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很明显,我们在Activity中用map_stub得到ViewStub,layout属性告诉ViewStub应该去加载哪个布局文件.&lt;/p&gt;

&lt;p&gt;map.xml代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;com.google.android.maps.MapView xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;fill_parent&amp;quot;
        android:clickable=&amp;quot;true&amp;quot;
        android:apiKey=&amp;quot;my_api_key&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我们需要讨论的是最后这个属性android:inflatedId.我们可以用 &lt;em&gt;inflate()&lt;/em&gt; 或者 &lt;em&gt;setVisibility&lt;/em&gt; 方法让这个View显示出来.在这个例子中,我们用了 &lt;em&gt;setVisibility(View.VISIBLE)&lt;/em&gt; ,因为我们不要对这个MapView做任何事情.如果我们需要得到一个引用, &lt;em&gt;inflate()&lt;/em&gt; 会返回这个View避免第二次去调用 &lt;em&gt;findViewById()&lt;/em&gt; .&lt;/p&gt;

&lt;p&gt;Activity 代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; public class MainActivity extends MapActivity {
        private View mViewStub;


        @Override public void onCreate(Bundle savedInstanceState) {
            super.onCreate(savedInstanceState);
            setContentView(R.layout.main);
            mViewStub = findViewById(R.id.map_stub);
        }


        public void onShowMap(View v) {
            mViewStub.setVisibility(View.VISIBLE);
        }


        ...
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就像你看见的一样,是否展示这个地图只需要改变ViewStub的 &lt;em&gt;visibility&lt;/em&gt; 变量值即可.&lt;/p&gt;

&lt;h3 id=&#34;hack-3-creating-a-custom-viewgroup-android-v1-6:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;Hack 3 Creating a custom ViewGroup (Android v1.6+)&lt;/h3&gt;

&lt;p&gt;当你正在设计App时,可能在页面中会有复杂的视图去展示.想象你正在创建一个纸牌游戏,并像下图的那样展示手牌.该怎么创建这个视图呢？&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://sunxu.work/media/50hacks-1-1.png&#34; alt=&#34;50hacks-1-1&#34;
    attr width=&#34;40%&#34;  /&gt;
&lt;/figure&gt;

&lt;p&gt;可以在RelativeLayout中设置margin,这是可行的.代码如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt; &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;fill_parent&amp;quot;&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:background=&amp;quot;#FF0000&amp;quot;/&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:layout_marginLeft=&amp;quot;30dp&amp;quot;
            android:layout_marginTop=&amp;quot;20dp&amp;quot;
            android:background=&amp;quot;#00FF00&amp;quot;/&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:layout_marginLeft=&amp;quot;60dp&amp;quot;
            android:layout_marginTop=&amp;quot;40dp&amp;quot;
            android:background=&amp;quot;#0000FF&amp;quot;/&amp;gt;
    &amp;lt;/RelativeLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果是介个样子的:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://sunxu.work/media/50hacks-1-2.png&#34; alt=&#34;50hacks-1-2&#34;
    attr width=&#34;40%&#34;  /&gt;
&lt;/figure&gt;

&lt;p&gt;下面介绍另外一种方式来创建相同类型的布局&amp;ndash;创建一个自定义 &lt;em&gt;ViewGroup&lt;/em&gt; .相比在xml中手动添加margins,自定义 &lt;em&gt;ViewGroup&lt;/em&gt; 的优点有:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;It’s easier to maintain if you’re using it in differ- ent activities.&lt;/li&gt;
&lt;li&gt;You can use custom attributes to customize the position of the ViewGroup chil- dren.&lt;/li&gt;
&lt;li&gt;The XML will be easier to understand because it’ll be more concise.&lt;/li&gt;
&lt;li&gt;If you need to change the margins, you won’t need to recalculate by hand every
child’s margin.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;3-1-understanding-how-android-draws-views:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;3.1 Understanding how Android draws views&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;Drawing the layout is a two-pass process: a measure pass and a layout pass. The measuring pass is implemented in measure(int, int) and is a top-down traversal of the View tree. Each View pushes dimension specifications down the tree during the recursion. At the end of the measure pass, every View has stored its measurements. The second pass happens in layout(int, int, int, int) and is also top-down. During this pass each parent is responsible for positioning all of its children using the sizes computed in the measure pass.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;为了理解这个概念,我们来分析一下绘制 &lt;em&gt;ViewGroup&lt;/em&gt; 的方式.第一步在 &lt;em&gt;onMeasure()&lt;/em&gt; 这个方法里面去测量宽和高.在这个方法里面, &lt;em&gt;ViewGroup&lt;/em&gt; 会通过里面的子视图来计算它的大小.第二步通过在 &lt;em&gt;onLayout()&lt;/em&gt; 这个方法里面去放置它的子视图.在这个方法里面, &lt;em&gt;ViewGroup&lt;/em&gt; 通过在 &lt;em&gt;onMeasure()&lt;/em&gt; 方法里收集到子视图的信息来放置它们.&lt;/p&gt;

&lt;h4 id=&#34;3-2-creating-the-cascadelayout:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;3.2 Creating the CascadeLayout&lt;/h4&gt;

&lt;p&gt;xml代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;FrameLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    xmlns:cascade=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

    &amp;lt;com.manning.androidhacks.hack003.view.CascadeLayout
        android:layout_width=&amp;quot;fill_parent&amp;quot;
        android:layout_height=&amp;quot;fill_parent&amp;quot;
        cascade:horizontal_spacing=&amp;quot;30dp&amp;quot;
        cascade:vertical_spacing=&amp;quot;20dp&amp;quot;&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:background=&amp;quot;#FF0000&amp;quot;/&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:background=&amp;quot;#00FF00&amp;quot;/&amp;gt;

        &amp;lt;View
            android:layout_width=&amp;quot;100dp&amp;quot;
            android:layout_height=&amp;quot;150dp&amp;quot;
            android:background=&amp;quot;#0000FF&amp;quot;/&amp;gt;
    &amp;lt;/com.manning.androidhacks.hack003.view.CascadeLayout&amp;gt;
&amp;lt;/FrameLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;接着,我们来定义这些自定义属性.在 &lt;em&gt;res/values&lt;/em&gt; 这个文件夹下创建 &lt;em&gt;attrs.xml&lt;/em&gt; .代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;resources&amp;gt;

        &amp;lt;declare-styleable name=&amp;quot;CascadeLayout&amp;quot;&amp;gt;

            &amp;lt;attr
                name=&amp;quot;horizontal_spacing&amp;quot;
                format=&amp;quot;dimension&amp;quot;/&amp;gt;

            &amp;lt;attr
                name=&amp;quot;vertical_spacing&amp;quot;
                format=&amp;quot;dimension&amp;quot;/&amp;gt;
        &amp;lt;/declare-styleable&amp;gt;
    &amp;lt;/resources&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;em&gt;res/values/dimens.xml&lt;/em&gt; 中定义自定义属性的值.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt; &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;resources&amp;gt;
        &amp;lt;dimen name=&amp;quot;cascade_horizontal_spacing&amp;quot;&amp;gt;10dp&amp;lt;/dimen&amp;gt;
        &amp;lt;dimen name=&amp;quot;cascade_vertical_spacing&amp;quot;&amp;gt;10dp&amp;lt;/dimen&amp;gt;
    &amp;lt;/resources&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在理解完Android怎样绘制视图后,你可能该想着去创建一个 &lt;em&gt;CascadeLayout&lt;/em&gt; 的类去继承 &lt;em&gt;ViewGroup&lt;/em&gt; ,在这个类里面去重写 &lt;em&gt;onMeasure()&lt;/em&gt; 和 &lt;em&gt;onLayout()&lt;/em&gt; 这两个方法.因为代码有一点长,我们分三部分来分析:构造方法, &lt;em&gt;onMeasure()&lt;/em&gt; , &lt;em&gt;onLayout()&lt;/em&gt; .
下面是构造方法的代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class CascadeLayout extends ViewGroup {
    private int mHorizontalSpacing;
    private int mVerticalSpacing;

    // Constructor called when view instance is created from an XML file.
    public CascadeLayout(Context context, AttributeSet attrs) {
        // mHorizontalSpacing and mVerticalSpacing are read from custom attributes. If they’re not present, use default values.
        super(context, attrs);
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CascadeLayout);
        try {
            mHorizontalSpacing = a.getDimensionPixelSize(R.styleable.CascadeLayout_horizontal_spacing,
                    getResources().getDimensionPixelSize(R.dimen.cascade_horizontal_spacing));
            mVerticalSpacing = a.getDimensionPixelSize(R.styleable.CascadeLayout_vertical_spacing,
                    getResources().getDimensionPixelSize(R.dimen.cascade_vertical_spacing));
        } finally {
            a.recycle();
        }
    }
    
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 &lt;em&gt;onMeasure()&lt;/em&gt; 这个方法里面写代码前,我们创建一个自定义的 &lt;em&gt;LayoutParams&lt;/em&gt; 类,作为 &lt;em&gt;CascadeLayout&lt;/em&gt; 的内部类,为每一个子view保留x,y的坐标值.代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public static class LayoutParams extends ViewGroup.LayoutParams {
        int x;
        int y;


        public LayoutParams(Context context, AttributeSet attrs) {
            super(context, attrs);
        }


        public LayoutParams(int w, int h) {
            super(w, h);
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了去使用 &lt;em&gt;CascadeLayout.LayoutParams&lt;/em&gt; 这个类,我们需要在 &lt;em&gt;CascadeLayout&lt;/em&gt; 这个类中重写一些额外的方法: &lt;em&gt;checkLayoutParams()&lt;/em&gt; , &lt;em&gt;generateDefaultLayoutParams()&lt;/em&gt; , &lt;em&gt;generateLayoutParams(AttributeSet attrs)&lt;/em&gt; , &lt;em&gt;generateLayoutParams(ViewGroup.LayoutParams p)&lt;/em&gt; .代码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    @Override protected boolean checkLayoutParams(ViewGroup.LayoutParams p) {
        return p instanceof LayoutParams;
    }


    @Override protected LayoutParams generateDefaultLayoutParams() {
        return new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
    }


    @Override public LayoutParams generateLayoutParams(AttributeSet attrs) {
        return new LayoutParams(getContext(), attrs);
    }


    @Override protected LayoutParams generateLayoutParams(ViewGroup.LayoutParams p) {
        return new LayoutParams(p.width, p.height);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;onMeasure()&lt;/em&gt; ,是这个类的关键.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Override 
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
	     // Use width and height to calculate layout’s final size and children’s x and y positions.
        int width = 0;
        int height = getPaddingTop();
        final int count = getChildCount();
        for (int i = 0; i &amp;lt; count; i++) {
            View child = getChildAt(i);
            // Make every child measure itself.
            measureChild(child, widthMeasureSpec, heightMeasureSpec);
            ￼LayoutParams lp = (LayoutParams) child.getLayoutParams();
            width = getPaddingLeft() + mHorizontalSpacing * i;
            lp.x = width;
            lp.y = height;
            width += child.getMeasuredWidth();
            height += mVerticalSpacing;
        } 
        width += getPaddingRight();
        height += getChildAt(getChildCount() - 1).getMeasuredHeight() + getPaddingBottom();
        // Uses calculated width and height to set measured dimensions of whole layout.
        setMeasuredDimension(resolveSize(width, widthMeasureSpec), resolveSize(height, heightMeasureSpec));
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最后一步是创建 &lt;em&gt;onLayout()&lt;/em&gt; .&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;@Override 
protected void onLayout(boolean changed, int l, int t, int r, int b) {
        final int count = getChildCount();
        for (int i = 0; i &amp;lt; count; i++) {
            View child = getChildAt(i);
            LayoutParams lp = (LayoutParams) child.getLayoutParams();
            child.layout(lp.x, lp.y, lp.x + child.getMeasuredWidth(), lp.y + child.getMeasuredHeight());
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3-3-adding-custom-attributes-to-the-children:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;3.3 Adding custom attributes to the children&lt;/h4&gt;

&lt;p&gt;在最后一个章节中,你将会学到如何为子视图添加自定义属性.例如,为一个特定的子视图重新定义垂直间距.如下图&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://sunxu.work/media/50hacks-1-3.png&#34; alt=&#34;50hacks-1-3&#34;
    attr width=&#34;40%&#34;  /&gt;
&lt;/figure&gt;

&lt;p&gt;添加新的属性到 &lt;em&gt;attrs.xml&lt;/em&gt; 中:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;declare-styleable name=&amp;quot;CascadeLayout_LayoutParams&amp;quot;&amp;gt;
        &amp;lt;attr name=&amp;quot;layout_vertical_spacing&amp;quot;
            format=&amp;quot;dimension&amp;quot;/&amp;gt;
    &amp;lt;/declare-styleable&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为这个属性名是以 &lt;em&gt;layout_&lt;/em&gt; 开始的,所以它被添加到 &lt;em&gt;LayoutParams&lt;/em&gt; 属性中.在 &lt;em&gt;LayoutParams&lt;/em&gt; 这个构造方法中取出这个属性.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; public LayoutParams(Context context, AttributeSet attrs) {
        super(context, attrs);
        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.CascadeLayout_LayoutParams);
        try {
            verticalSpacing = a.getDimensionPixelSize(R.styleable.CascadeLayout_LayoutParams_layout_vertical_spacing,
                    -1);
        } finally {
            a.recycle();
        }
    }

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;verticalSpacing&lt;/em&gt; 是一个 &lt;em&gt;public field&lt;/em&gt; .我们会在 &lt;em&gt;CascadeLayout&lt;/em&gt; 中用到,如果子视图的 &lt;em&gt;LayoutParams&lt;/em&gt; 中包含 &lt;em&gt;verticalSpacing&lt;/em&gt; ,我们就可以使用它.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; verticalSpacing = mVerticalSpacing;
        ...
        LayoutParams lp = (LayoutParams) child.getLayoutParams();
        if (lp.verticalSpacing &amp;gt;= 0) {
            verticalSpacing = lp.verticalSpacing;
        }
        ...
        width += child.getMeasuredWidth();
        height += verticalSpacing;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hack-4-preferences-hacks-android-v1-6:1e33089dd85e7ee1909260ca9a39f4a5&#34;&gt;Hack 4 Preferences hacks (Android v1.6+)&lt;/h3&gt;

&lt;p&gt;定义一个偏好设置界面,只需要写一些xml,就可以快速生成.大家看代码就可以懂了,跟自定义view类似.&lt;/p&gt;

&lt;p&gt;效果图:&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;http://sunxu.work/media/50hacks-1-4.png&#34; alt=&#34;50hacks-1-4&#34;
    attr width=&#34;40%&#34;  /&gt;
&lt;/figure&gt;

&lt;p&gt;在 &lt;em&gt;res/xml&lt;/em&gt; 中创建 &lt;em&gt;prefs.xml&lt;/em&gt; .&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;!--
  Copyright (c) 2012 Manning
  See the file license.txt for copying permission.
--&amp;gt;

&amp;lt;PreferenceScreen
    xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:key=&amp;quot;pref_first_preferencescreen_key&amp;quot;
    android:title=&amp;quot;Preferences&amp;quot;&amp;gt;

    &amp;lt;PreferenceCategory
        android:title=&amp;quot;User&amp;quot;&amp;gt;

        &amp;lt;EditTextPreference
            android:key=&amp;quot;pref_username&amp;quot;
            android:summary=&amp;quot;Username:&amp;quot;
            android:title=&amp;quot;Username&amp;quot;/&amp;gt;

    &amp;lt;/PreferenceCategory&amp;gt;

    &amp;lt;PreferenceCategory
        android:title=&amp;quot;Application&amp;quot;&amp;gt;

        &amp;lt;Preference
            android:key=&amp;quot;pref_rate&amp;quot;
            android:summary=&amp;quot;Rate the app in the store!&amp;quot;
            android:title=&amp;quot;Rate the app&amp;quot;/&amp;gt;

        &amp;lt;Preference
            android:key=&amp;quot;pref_share&amp;quot;
            android:summary=&amp;quot;Share the app with your friends&amp;quot;
            android:title=&amp;quot;Share it&amp;quot;/&amp;gt;

        &amp;lt;com.manning.androidhacks.hack004.preference.EmailDialog
            android:dialogIcon=&amp;quot;@drawable/ic_launcher&amp;quot;
            android:dialogTitle=&amp;quot;Send Feedback&amp;quot;
            android:dialogMessage=&amp;quot;Do you want to send an email with feedback?&amp;quot;
            android:key=&amp;quot;pref_sendemail_key&amp;quot;
            android:negativeButtonText=&amp;quot;Cancel&amp;quot;
            android:positiveButtonText=&amp;quot;OK&amp;quot;
            android:summary=&amp;quot;Send your feedback by e-mail&amp;quot;
            android:title=&amp;quot;Send Feedback&amp;quot;/&amp;gt;

        &amp;lt;com.manning.androidhacks.hack004.preference.AboutDialog
            android:dialogIcon=&amp;quot;@drawable/ic_launcher&amp;quot;
            android:dialogTitle=&amp;quot;About&amp;quot;
            android:key=&amp;quot;pref_about_key&amp;quot;
            android:negativeButtonText=&amp;quot;@null&amp;quot;
            android:title=&amp;quot;About&amp;quot;/&amp;gt;

    &amp;lt;/PreferenceCategory&amp;gt;

&amp;lt;/PreferenceScreen&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xml会创建好视图,我们只需在activity中写好逻辑即可.不一样的是,activity需要继承 &lt;em&gt;android.preference.PreferenceActivity&lt;/em&gt; .&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class MainActivity extends PreferenceActivity implements
    OnSharedPreferenceChangeListener {

  @Override
  public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    addPreferencesFromResource(R.xml.prefs);

    Preference sharePref = findPreference(&amp;quot;pref_share&amp;quot;);
    Intent shareIntent = new Intent();
    shareIntent.setAction(Intent.ACTION_SEND);
    shareIntent.setType(&amp;quot;text/plain&amp;quot;);
    shareIntent.putExtra(Intent.EXTRA_SUBJECT, &amp;quot;Check this app!&amp;quot;);
    shareIntent.putExtra(Intent.EXTRA_TEXT,
        &amp;quot;Check this awesome app at: ...&amp;quot;);
    sharePref.setIntent(shareIntent);

    Preference ratePref = findPreference(&amp;quot;pref_rate&amp;quot;);
    Uri uri = Uri.parse(&amp;quot;market://details?id=&amp;quot; + getPackageName());
    Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);
    ratePref.setIntent(goToMarket);

    updateUserText();
  }

  @Override
  protected void onResume() {
    super.onResume();

    getPreferenceScreen().getSharedPreferences()
        .registerOnSharedPreferenceChangeListener(this);

  }

  @Override
  protected void onPause() {
    super.onPause();

    getPreferenceScreen().getSharedPreferences()
        .unregisterOnSharedPreferenceChangeListener(this);
  }

  @Override
  public void onSharedPreferenceChanged(
      SharedPreferences sharedPreferences, String key) {

    if (key.equals(&amp;quot;pref_username&amp;quot;)) {
      updateUserText();
    }
  }

  private void updateUserText() {
    EditTextPreference pref;
    pref = (EditTextPreference) findPreference(&amp;quot;pref_username&amp;quot;);
    String user = pref.getText();

    if (user == null) {
      user = &amp;quot;?&amp;quot;;
    }

    pref.setSummary(String.format(&amp;quot;Username: %s&amp;quot;, user));
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自定义一个 &lt;em&gt;preferences&lt;/em&gt; 就像自定义view一样.为了更好地理解它,我们来看一下 &lt;em&gt;EmailDialog&lt;/em&gt; 这个类的代码.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Custom class should extend some of existing preferences widgets. In this case, we’ll use DialogPreference.

public class EmailDialog extends DialogPreference {
  Context mContext;

  public EmailDialog(Context context) {
    this(context, null);
  }

  public EmailDialog(Context context, AttributeSet attrs) {
    this(context, attrs, 0);
  }

  public EmailDialog(Context context, AttributeSet attrs, int defStyle) {
  
  // Constructors are the same as those used to create a custom view extending the View class.
  
    super(context, attrs, defStyle);
    mContext = context;
  }

  // onClick() is overridden. If users press OK button, then we’ll launch email Intent with helper class.
  
  @Override
  public void onClick(DialogInterface dialog, int which) {
    super.onClick(dialog, which);

    if (DialogInterface.BUTTON_POSITIVE == which) {
      LaunchEmailUtil.launchEmailToIntent(mContext);
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好了,以上就是这本书的第一章了,完成了4/50.有什么不对的,或者建议,大家可以直接留言给我,也可以给我发邮件.&lt;/p&gt;

&lt;p&gt;15年就这么过去了,元旦那天朋友圈里,公众号里大家都在忙着自我检讨.想了想去年除了像每年一样都感觉孤独外,还有就是焦虑,每天都在焦虑.这一年有努力,有懈怠,有期待,有迷茫.知乎上的名字是taken2016,还没来得及改.记得当初起这名是想16年是收获的一年,而如今已经步入16年了.今年真的会是收获的一年咩?实在不行就换成taken2017吧:)不断积累,期待着,期待着.&lt;/p&gt;

&lt;p&gt;好了,写了点没用的.希望写的东西对大家有用,非常期待大家对我的建议,无论是生活上还是技术上.毕竟我还是个刚入职不到一年的小菜鸟~~&lt;/p&gt;

&lt;p&gt;有的朋友给我发邮件说这书太老,已经没有翻译的价值,况且世面上已经有中文版了.我去找了下确实,而且还有相应的中文PDF.所以我不打算再写后边的关于这书的篇章了.&lt;/p&gt;

&lt;p&gt;有兴趣的小伙伴可以边看边参考完整的代码.&lt;a href=&#34;https://github.com/Macarse/50AH-code&#34;&gt;本书github项目地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后,祝好:)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android Studio项目应该提交哪些文件到GitHub上</title>
      <link>http://sunxu.work/android/commit-what-to-github-in-as/</link>
      <pubDate>Fri, 11 Dec 2015 23:34:50 CST</pubDate>
      <author>Xu Sun</author>
      <guid>http://sunxu.work/android/commit-what-to-github-in-as/</guid>
      <description>&lt;p&gt;在知乎上看到的提问,原问题链接: &lt;a href=&#34;http://www.zhihu.com/question/37910193&#34;&gt;http://www.zhihu.com/question/37910193&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;当我们上传用AS写的Android代码时,上传没必要的代码不仅浪费空间,有时还会引起项目共同合作人员在提交代码时的冲突,那么究竟什么代码该上传,什么代码不该上传呢？&lt;/p&gt;

&lt;p&gt;查阅相关资料:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jetbrains.com/idea/help/project.html&#34;&gt;http://www.jetbrains.com/idea/help/project.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/amanoiverse/items/71b7dccf992b33930c35&#34;&gt;http://qiita.com/amanoiverse/items/71b7dccf992b33930c35&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/16736856/what-should-be-in-my-gitignore-for-an-android-studio-project&#34;&gt;http://stackoverflow.com/questions/16736856/what-should-be-in-my-gitignore-for-an-android-studio-project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/iainconnor/8605514&#34;&gt;https://gist.github.com/iainconnor/8605514&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/drakeet/Meizhi/blob/master/.gitignore&#34;&gt;https://github.com/drakeet/Meizhi/blob/master/.gitignore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JakeWharton/butterknife/blob/master/.gitignore&#34;&gt;https://github.com/JakeWharton/butterknife/blob/master/.gitignore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/bboyfeiyu/Colorful/blob/master/.gitignore&#34;&gt;https://github.com/bboyfeiyu/Colorful/blob/master/.gitignore&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;找了一些资料后,每个给出的答案都不一样,我把上面的答案总结后融合了一下添加到平常在在本地练习的 &lt;em&gt;.gitignore&lt;/em&gt; 文件中,并上传到Github上然后down下来重新导入,发现导入没有任何异常,运行顺利.&lt;/p&gt;

&lt;p&gt;融合后的 &lt;em&gt;.gitignore&lt;/em&gt; :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# IntelliJ IDEA
.idea
*.iml
*.ipr
*.iws

# Gradle
.gradle
gradlew.bat
build

# Local configuration file (sdk path, etc)
local.properties
reports
/captures

jacoco.exec

# Mac system files
.DS_Store


# Built application files
*.apk
*.ap_

# Android Studio captures folder
/captures


# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin/
gen/
out
lib

# Eclipse project files
.classpath
.project
.settings/
eclipsebin
.metadata/

# Proguard folder generated by Eclipse
proguard/

#NDK
obj/
jniLibs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上传到GitHub后的项目预览:

&lt;figure &gt;
    
        &lt;img src=&#34;http://sunxu.work/media/test-gitignore.png&#34; alt=&#34;test-gitignore&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;/p&gt;

&lt;p&gt;不需要额外的配置即可导入运行,那么这个融合的了 &lt;em&gt;.gitignore&lt;/em&gt; 就是可行的.&lt;/p&gt;

&lt;p&gt;回过头再来看Android Studio中的 &lt;em&gt;.gitignore&lt;/em&gt;,发现有绿色的代码,也有灰色的代码,当把鼠标移过去也会有不一样的提示.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://sunxu.work/media/test-gitignore-covered.png&#34; alt=&#34;test-gitignore-covered&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;有这种提示的就是文件已经包含在其他的文件夹中,可以删除这些文件.&lt;/p&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://sunxu.work/media/test-gitignore-never-used.png&#34; alt=&#34;test-gitignore-never-used&#34; /&gt;
    
    
&lt;/figure&gt;



&lt;p&gt;有这种提示的就是工程中不包含这种文件,没必要申明在 *.gitignore*文件中,也可删除.&lt;/p&gt;

&lt;p&gt;那么我们删除了上述这种文件后, *.gitignore*马上就变得清爽起来.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# IntelliJ IDEA
.idea
*.iml

# Gradle
.gradle
build

# Local configuration file (sdk path, etc)
local.properties

# Mac system files
.DS_Store
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为了科学严谨性,再次上传包含这份 &lt;em&gt;.gitignore&lt;/em&gt; 的代码到GitHub中,结构跟上面的图显示是一样的.&lt;/p&gt;

&lt;p&gt;再次down下来导入AS,运行依旧顺利.&lt;/p&gt;

&lt;p&gt;总结:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;我们当然可以把融合后比较多的代码模板复制到自己的 *.gitignore*文件中,这样会容错率高,有助于防止多传一些没必要的东西.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;也可以根据自己代码的实际情况根据提示,决定究竟该上传些什么代码,但应该大于等于上面最后这段代码.(如项目中用到了NDK,就可以加上/obj)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;总之就是提供给大家一种思路,才疏学浅,还请大家多多提意见给我.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;最后,祝好:)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>

